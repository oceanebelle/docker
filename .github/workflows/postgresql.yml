name: build postgresql image

on:
  pull_request:
    branches: [ master ]
    paths: 
    - 'postgresql/**'
    - '!postgresql/**.md'

jobs:

  build:
    env: 
      DOCKER_REGISTRY: docker.io
      DOCKER_IMAGE: oceanebelle/postgresql      
      DOCKER_USERNAME: ${{ secrets.DOCKER_ID }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_ACCESS_TOKEN }}  
      DOCKER_TARGET_PLATFORM: linux/arm/v7

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: setup docker buildx
      id: buildx
      uses: crazy-max/ghaction-docker-buildx@v1
      with:
        buildx-version: latest
        qemu-version: latest
    
    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}

    - name: Prepare      
      if: success()      
      id: prepare      
      run: |        
        echo ::set-output name=docker_platform::${DOCKER_TARGET_PLATFORM}        
        echo ::set-output name=docker_image::${DOCKER_REGISTRY}/${DOCKER_IMAGE}        
        echo ::set-output name=version::arm32v7

    - name: Docker Login      
      if: success()      
      run: |        
        echo "${DOCKER_PASSWORD}" | docker login ${DOCKER_REGISTRY} --username "${DOCKER_USERNAME}" --password-stdin  

    - name: Run Buildx (push image) for arm32v7     
      if: success()
      run: |        
        docker buildx build \
         --platform ${DOCKER_TARGET_PLATFORM} \
         --tag ${DOCKER_IMAGE}:arm32v7 \
         --push \
         -f Dockerfile-arm32v7 .
      working-directory: ./postgresql

    - name: build and push postgresql
      uses: docker/build-push-action@v1.1.0
      with:
        username: ${{ secrets.DOCKER_ID }}
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }}  
        repository: oceanebelle/postgresql
        tags: latest
        path: postgresql
        dockerfile: postgresql/Dockerfile
        add_git_labels: false
        push: true

